# aux_source_directory(. DIR_SRCS)
# add_executable(000 ${DIR_SRCS})

include_directories(include)

add_executable(Factory main_factory.cpp Product.cpp Factory.cpp)
add_executable(AbstractFactory main_abstract_factory.cpp Product.cpp AbstractFactory.cpp)
add_executable(Singleton  main_singleton.cpp  Singleton.cpp)
add_executable(Builder  main_builder.cpp  Builder.cpp Director.cpp P1roduct.cpp)
add_executable(Prototype  main_prototype.cpp  Prototype.cpp)
add_executable(Bridge  main_bridge.cpp  Abstraction.cpp AbstractionImp.cpp)
add_executable(Adapter  main_adapter.cpp  Adapter.cpp)
add_executable(A1dapter  main_a1dapter.cpp  A1dapter.cpp)
add_executable(Decorator  main_decorator.cpp  Decorator.cpp)
add_executable(Composite  main_composite.cpp  Component.cpp Composite.cpp Leaf.cpp)
add_executable(Flyweight  main_flyweight.cpp  Flyweight.cpp FlyweightFactory.cpp)
add_executable(Facade  main_facade.cpp  Facade.cpp)
add_executable(Proxy  main_proxy.cpp  Proxy.cpp)
add_executable(Template  main_template.cpp  Template.cpp)
add_executable(Strategy  main_strategy.cpp  Strategy.cpp Context.cpp)
add_executable(State  main_state.cpp  State.cpp C1ontext.cpp)
add_executable(Observer  main_observer.cpp  Subject.cpp Observer.cpp)
add_executable(Memento  main_memento.cpp  Memento.cpp)
add_executable(Mediator  main_mediator.cpp  Mediator.cpp Colleage.cpp)
add_executable(Command  main_command.cpp  Command.cpp Invoker.cpp Reciever.cpp)
add_executable(SimpleCommand  main_simpleCommand.cpp  Command.cpp Reciever.cpp)
add_executable(Visitor  main_visitor.cpp  Element.cpp Visitor.cpp)
add_executable(ChainOfResponsibility  main_chainOfResponsibility.cpp  Handle.cpp)
add_executable(Iterator  main_iterator.cpp  Aggregate.cpp Iterator.cpp)
add_executable(Interpret  main_interpret.cpp  Interpret.cpp)
